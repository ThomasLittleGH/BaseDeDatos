/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bd;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lab
 */
public class fraPersona extends javax.swing.JFrame {

    private boolean edit = false;
    private int fila;
    private String filaString;

    /**
     * Creates new form fraPersona
     */
    public fraPersona() {
        initComponents();
        mostrarDatos(0);
        txtNombre.requestFocus();
    }

    void mostrarDatos(int buscar) {
        // Para utilizar una tabla en swing se debe utilizar un objeto de tipo default table model
        DefaultTableModel tabla = new DefaultTableModel();
        tabla.addColumn("ID");
        tabla.addColumn("Nombre");
        tabla.addColumn("Departamento");
        tblPersonas.setModel(tabla);//se configura el contenedor de la tabla

        String sql;
        if (buscar != 0) {
            sql = "SELECT * from personas WHERE id='" + buscar + "'";
        } else {
            sql = "SELECT * from personas";
        }
        String[] datos = new String[3];
        try {
            // se conecta a la BD y se ejecuta el codigo SQL 
            Statement st = conn.createStatement(); // define conexion
            ResultSet rs = st.executeQuery(sql); // se manda el comando

            while (rs.next()) {
                datos[0] = Integer.toString(rs.getInt(1));
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                tabla.addRow(datos);
            }
            tblPersonas.setModel(tabla);
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pmnuModificadores = new javax.swing.JPopupMenu();
        mniEliminar = new javax.swing.JMenuItem();
        mniModificar = new javax.swing.JMenuItem();
        panAgregarPersona = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        lblDepto = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        txtDepto = new javax.swing.JTextField();
        panVerPersonas = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPersonas = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        btnMostrarTodos = new javax.swing.JButton();

        mniEliminar.setText("Eliminar");
        mniEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniEliminarActionPerformed(evt);
            }
        });
        pmnuModificadores.add(mniEliminar);

        mniModificar.setText("Editar");
        mniModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniModificarActionPerformed(evt);
            }
        });
        pmnuModificadores.add(mniModificar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panAgregarPersona.setBorder(javax.swing.BorderFactory.createTitledBorder("Agregar Personas"));
        panAgregarPersona.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombre.setText("Nombre:");
        panAgregarPersona.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 38, -1, -1));

        lblDepto.setText("Depto:");
        panAgregarPersona.add(lblDepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 65, -1, -1));

        btnGuardar.setText("SAVE");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        panAgregarPersona.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 65, -1, -1));
        panAgregarPersona.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 33, 263, -1));
        panAgregarPersona.add(txtDepto, new org.netbeans.lib.awtextra.AbsoluteConstraints(78, 65, 263, -1));

        panVerPersonas.setBorder(javax.swing.BorderFactory.createTitledBorder("Ver Personas"));

        tblPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPersonas.setComponentPopupMenu(pmnuModificadores);
        jScrollPane1.setViewportView(tblPersonas);

        btnBuscar.setText("Buscar ID");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });

        btnMostrarTodos.setText("Mostrar Todos");
        btnMostrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panVerPersonasLayout = new javax.swing.GroupLayout(panVerPersonas);
        panVerPersonas.setLayout(panVerPersonasLayout);
        panVerPersonasLayout.setHorizontalGroup(
            panVerPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panVerPersonasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panVerPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panVerPersonasLayout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarTodos)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panVerPersonasLayout.setVerticalGroup(
            panVerPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panVerPersonasLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(panVerPersonasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar)
                    .addComponent(btnMostrarTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panAgregarPersona, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panVerPersonas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panAgregarPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panVerPersonas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if (!edit) {
            try {
                // Se definen instrucciones para ejecutar las sentencias SQL
                PreparedStatement pst = conn.prepareStatement("Insert INTO personas (nombre, depto) VALUES (?, ?)"); //Se pasa el codigo SQL de insercion al objeto PeparedStatement.
                pst.setString(1, txtNombre.getText());
                pst.setString(2, txtDepto.getText());
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Registro Insertado");
            } catch (Exception e) {
                System.out.println(e.getMessage());
                System.out.println("No se puede guardar");
            }
        } else {
            try {
                // Se definen instrucciones para ejecutar las sentencias SQL
                PreparedStatement pst = conn.prepareStatement("UPDATE personas set nombre='" + txtNombre.getText() + "',depto = '" + txtDepto.getText() + "' WHERE id = '" + (filaString) + "'"); //Se pasa el codigo SQL de insercion al objeto PeparedStatement.
                pst.executeUpdate();
                System.out.println(fila);
            } catch (Exception e) {
                System.out.println(e.getMessage());
                System.out.println("No se puede guardar");
            }
            edit = false;
        }
        mostrarDatos(0);

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void mniEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniEliminarActionPerformed
        fila = tblPersonas.getSelectedRow();
        int resp = JOptionPane.showConfirmDialog(null, "Esta seguro que desea eliminar?");
        if (fila >= 0) {
            if (resp == JOptionPane.YES_OPTION) {
                try {
                    // Se definen instrucciones para ejecutar las sentencias SQL
                    PreparedStatement pst = conn.prepareStatement("DELETE FROM personas WHERE id ='" + tblPersonas.getValueAt(fila, 0) + "'"); //Se pasa el codigo SQL de insercion al objeto PeparedStatement.
                    pst.executeUpdate();
                    mostrarDatos(0);
                } catch (Exception e) {
                    System.out.println(e.getMessage());
                    System.out.println("No se puede borrar");
                }
                filaString = tblPersonas.getValueAt(fila, 0).toString();
            } else {
                JOptionPane.showMessageDialog(null, "Operacion Cancelada");
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "NO selecciono ninguna fila de la tabla");
        }

    }//GEN-LAST:event_mniEliminarActionPerformed

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed

    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (Integer.parseInt(txtBuscar.getText()) < 1 || txtBuscar.getText().trim().equals("")) { // si el buscar esta vacio mostrar todos los valores
            mostrarDatos(0);
        } else {
            mostrarDatos(Integer.parseInt(txtBuscar.getText())); // muestravalor especifico
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMostrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodosActionPerformed
        mostrarDatos(0);
    }//GEN-LAST:event_btnMostrarTodosActionPerformed

    private void mniModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniModificarActionPerformed
        fila = tblPersonas.getSelectedRow(); // Captura el numero de fila
        if (fila >= 0) {
            txtNombre.setText(tblPersonas.getValueAt(fila, 1).toString());
            txtDepto.setText(tblPersonas.getValueAt(fila, 2).toString());
            edit = true;
            filaString = tblPersonas.getValueAt(fila, 0).toString();
        } else {
            JOptionPane.showMessageDialog(rootPane, "NO selecciono ninguna fila de la tabla");
        }
    }//GEN-LAST:event_mniModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(fraPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(fraPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(fraPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(fraPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new fraPersona().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnMostrarTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDepto;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JMenuItem mniEliminar;
    private javax.swing.JMenuItem mniModificar;
    private javax.swing.JPanel panAgregarPersona;
    private javax.swing.JPanel panVerPersonas;
    private javax.swing.JPopupMenu pmnuModificadores;
    private javax.swing.JTable tblPersonas;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtDepto;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

// se declara el objeto para recibir la conexion
    conectar conBD = new conectar();
    Connection conn = conBD.conexion();
}
